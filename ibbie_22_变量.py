"""
变量
    赋值操作传递的是引用，修改的是引用
    方法修改的是引用指向的值，而不是修改引用
    id() 查看变量的内存地址

不可变类型：
    数值，元组，字符串
    hash() 提取不可变数据的特征码，返回的是一个整数，相同的内容会得到相同的整数，不同的内容会得到不同的整数
    字典的key只能使用不可变的数据类型，python会对key进行hash以决定如何在内存中保存字典的数据
可变类型：列表，字典

局部变量：
    函数内部定义的变量，只能在函数内部使用
    生命周期：函数执行时创建，函数结束后回收
全局变量：
    在函数外部定义的变量，所有函数都可以使用这个变量
    在python中，函数不能直接修改全局变量的值
    想要在函数内部修改全局变量，要使用global关键字，显式声明要修改的是全局变量
    建议：模块中的全局变量定义在所有函数定义的上方，确保每个函数都能正常访问全局变量的值
    命名要求：增加“gl_”或"g_"前缀

一般的代码结构：从上到下，shebang==>import模块==>全局变量==>函数定义==>执行代码
"""

# a = 1
# print(id(a))  # 2232464140592
#
# b = a
# print(id(b))  # 2232464140592
# print(id(1))  # 2232464140592
#
# a = 2
# print(id(a))  # 2232464140624
# print(id(b))  # 2232464140592

temp_list = [1, 2, 3]
print(id(temp_list))  # 1540399587840
temp_list.insert(3, 66)
print(id(temp_list))  # 1540399587840

# 全局变量
num = 10


def demo():
    # 局部变量
    num = 99  # 函数内部，不会修改同名的全局变量
    print(num)


def demo2():
    # 使用global关键字声明num是全局变量
    global num
    num = 666


print(num)  # 10
demo()  # 99
print(num)  # 10
demo2()
print(num)  # 666
